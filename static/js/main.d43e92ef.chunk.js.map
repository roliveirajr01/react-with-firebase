{"version":3,"sources":["surfing.png","components/Header/Header.js","components/Chats/Chats.js","firebase.js","components/TinderCard/TinderCards.js","components/SwipeButtons/SwipeButtons.js","components/Login/Login.js","components/Hero/Hero.js","components/Login/LoginApp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","backButton","history","useHistory","className","to","IconButton","conClick","replace","fontSize","src","ImageLogo","alt","title","Chats","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","firestore","TinderCards","useState","people","setPeople","useEffect","unsubscribe","collection","onSnapshot","snapshot","docs","map","doc","data","person","preventSwipe","style","backgroundImage","url","name","size","SwipeButtons","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","type","autoFocus","required","value","onChange","e","target","onClick","Hero","handleLogout","LoginApp","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","signOut","signInWithEmailAndPassword","catch","err","code","message","console","log","createUserWithEmailAndPassword","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VAAe,MAA0B,oC,wBCgD1BA,EAvCA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACVC,EAAUC,cAEhB,OACE,sBAAKC,UAAU,SAAf,UACGH,EACC,cAAC,IAAD,CAAMI,GAAG,IAAT,SACE,cAACC,EAAA,EAAD,CAAYC,SAAU,kBAAML,EAAQM,QAAQP,IAA5C,SACE,cAAC,IAAD,CAAkBG,UAAU,cAAcK,SAAS,cAIvD,cAAC,IAAD,CAAMJ,GAAG,SAAT,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAYF,UAAU,cAAcK,SAAS,cAKnD,cAAC,IAAD,CAAMJ,GAAG,IAAT,SACE,cAACC,EAAA,EAAD,UACE,qBACEF,UAAU,cACVM,IAAKC,EACLC,IAAI,OACJC,MAAM,aAKZ,cAAC,IAAD,CAAMR,GAAG,QAAT,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAWF,UAAU,cAAcK,SAAS,kBC/BvCK,G,MARD,WACV,OACI,qBAAKV,UAAU,Y,yBCORW,E,MAAcC,EAASC,cATf,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAIIC,EAAWT,EAAYU,YC2BvBC,G,MAnCK,WAAO,IAAD,EACMC,mBAAS,IADf,mBACfC,EADe,KACPC,EADO,KActB,OAXAC,qBAAW,WACP,IAAMC,EAAcP,EACnBQ,WAAW,UACXC,YAAW,SAAAC,GAAQ,OACjBL,EAAUK,EAASC,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,cAE1C,OAAO,WACHP,OAEL,IAGC,8BACI,qBAAK3B,UAAU,6BAAf,SACCwB,EAAOQ,KAAI,SAAAG,GAAM,OACd,cAAC,IAAD,CACAnC,UAAU,QAEVoC,aAAc,CAAC,KAAM,QAHrB,SAII,sBACAC,MAAO,CAACC,gBAAgB,OAAD,OAASH,EAAOI,IAAhB,MACvBvC,UAAU,OAFV,UAGI,6BAAKmC,EAAOK,OACZ,+BAAOL,EAAOM,WANjBN,EAAOK,e,6FCYbE,EA3BM,WACnB,OACE,sBAAK1C,UAAU,eAAf,UACE,cAACE,EAAA,EAAD,UACE,cAAC,IAAD,CAAYG,SAAS,SAASL,UAAU,0BAG1C,cAACE,EAAA,EAAD,UACE,cAAC,IAAD,CAAWG,SAAS,SAASL,UAAU,yBAGzC,cAACE,EAAA,EAAD,UACE,cAAC,IAAD,CAAcG,SAAS,SAASL,UAAU,wBAG5C,cAACE,EAAA,EAAD,UACE,cAAC,IAAD,CAAcG,SAAS,SAASL,UAAU,4BAG5C,cAACE,EAAA,EAAD,UACE,cAAC,IAAD,CAAaG,SAAS,SAASL,UAAU,iCCiClC2C,EA5DD,SAACC,GAAW,IAEtBC,EAUED,EAVFC,MACAC,EASEF,EATFE,SACAC,EAQEH,EARFG,SACAC,EAOEJ,EAPFI,YACAC,EAMEL,EANFK,YACAC,EAKEN,EALFM,aACAC,EAIEP,EAJFO,WACAC,EAGER,EAHFQ,cACAC,EAEET,EAFFS,WACAC,EACEV,EADFU,cAEF,OACE,yBAAStD,UAAU,QAAnB,SACE,sBAAKA,UAAU,iBAAf,UACE,0CACA,uBACEuD,KAAK,OACLC,WAAS,EACTC,UAAQ,EACRC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOH,UAErC,mBAAG1D,UAAU,WAAb,SAAyBqD,IACzB,0CACA,uBACEE,KAAK,WACLE,UAAQ,EACRC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAYY,EAAEC,OAAOH,UAExC,mBAAG1D,UAAU,WAAb,SAAyBsD,IAEzB,qBAAKtD,UAAU,eAAf,SACGmD,EACC,qCACE,wBAAQW,QAASb,EAAjB,oBACA,sDACqB,IACnB,sBAAMa,QAAS,kBAAMV,GAAeD,IAApC,6BAMJ,qCACE,wBAAQW,QAASZ,EAAjB,uBACA,kDACoB,IAClB,sBAAMY,QAAS,kBAAMV,GAAeD,IAApC,kCCtCDY,EAXF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACX,OACI,yBAAShE,UAAU,OAAnB,SACI,gCACI,2CACA,wBAAQ8D,QAASE,EAAjB,wBCmGDC,EAtGE,WAAO,IAAD,EACG1C,mBAAS,IADZ,mBACd2C,EADc,KACRC,EADQ,OAEK5C,mBAAS,IAFd,mBAEdsB,EAFc,KAEPC,EAFO,OAGWvB,mBAAS,IAHpB,mBAGdwB,EAHc,KAGJC,EAHI,OAIezB,mBAAS,IAJxB,mBAId8B,EAJc,KAIFe,EAJE,OAKqB7C,mBAAS,IAL9B,mBAKd+B,EALc,KAKCe,EALD,OAMe9C,oBAAS,GANxB,mBAMd4B,EANc,KAMFC,EANE,KAabkB,EAAc,WAChBF,IACAC,KAgDAE,EAAe,WACjB5D,EAAY6D,OAAOC,oBAAmB,SAAAP,GAC/BA,GAxDLpB,EAAS,IACTE,EAAY,IAyDNmB,EAAQD,IAERC,EAAQ,QASpB,OAJAzC,qBAAU,WACR6C,MACC,IAGC,qBAAKvE,UAAU,YAAf,SACKkE,EACC,cAAC,EAAD,CAAMF,aAtBK,WACjBrD,EAAY6D,OAAOE,aAuBb,cAAC,EAAD,CACA7B,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,YAtEU,WAChBqB,IACF3D,EACG6D,OACAG,2BAA2B9B,EAAOE,GAClC6B,OAAM,SAACC,GACN,OAAQA,EAAIC,MACV,IAAK,qBACL,IAAK,qBACL,IAAK,sBACHV,EAAcS,EAAIE,SAClB,MACF,IAAK,sBACH/B,EAAY6B,EAAIE,SAChB,MACF,QACEC,QAAQC,IAAIJ,EAAIC,WAuDhB5B,aAlDW,WACjBoB,IACF3D,EACG6D,OACAU,+BAA+BrC,EAAOE,GACtC6B,OAAM,SAACC,GACN,OAAQA,EAAIC,MACV,IAAK,4BACL,IAAK,qBACHV,EAAcS,EAAIE,SAClB,MACF,IAAK,qBACH/B,EAAY6B,EAAIE,SAChB,MACF,QACEC,QAAQC,IAAIJ,EAAIC,WAoChB3B,WAAYA,EACZC,cAAeA,EACfC,WAAYA,EACZC,cAAeA,OC5DZ6B,MA7Bf,WACE,OACE,qBAAKnF,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,eAAC,IAAD,CAAOoF,KAAK,QAAZ,UACE,cAAC,EAAD,CAAQvF,WAAW,MACnB,cAAC,EAAD,OAGF,eAAC,IAAD,CAAOuF,KAAK,SAAZ,UACE,cAAC,EAAD,CAAQvF,WAAW,MACnB,cAAC,EAAD,OAGF,eAAC,IAAD,CAAOuF,KAAK,IAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,eChBGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d43e92ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/surfing.29106177.png\";","import React from \"react\";\nimport \"./Header.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ImageLogo from \"../../surfing.png\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\n\nconst Header = ({ backButton }) => {\n  const history = useHistory();\n\n  return (\n    <div className=\"header\">\n      {backButton ? (\n        <Link to=\"/\">\n          <IconButton conClick={() => history.replace(backButton)}>\n            <ArrowBackIosIcon className=\"header_icon\" fontSize=\"large\" />\n          </IconButton>\n        </Link>\n      ) : (\n        <Link to=\"/login\">\n          <IconButton>\n            <PersonIcon className=\"header_icon\" fontSize=\"large\" />\n          </IconButton>\n        </Link>\n      )}\n\n      <Link to=\"/\">\n        <IconButton>\n          <img\n            className=\"header_logo\"\n            src={ImageLogo}\n            alt=\"logo\"\n            title=\"logo\"\n          />\n        </IconButton>\n      </Link>\n\n      <Link to=\"/chat\">\n        <IconButton>\n          <ForumIcon className=\"header_icon\" fontSize=\"large\" />\n        </IconButton>\n      </Link>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport './Chats.css'\nconst Chats = () => {\n    return (\n        <div className=\"chats\">\n            \n        </div>\n    )\n}\n\nexport default Chats","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCoReT9yrZthuTL-gwpi82-E--4UP0hIyI\",\n    authDomain: \"surfboard-3643f.firebaseapp.com\",\n    projectId: \"surfboard-3643f\",\n    storageBucket: \"surfboard-3643f.appspot.com\",\n    messagingSenderId: \"267138708633\",\n    appId: \"1:267138708633:web:297f769cd17d273f8bb408\"\n  };\n\n  export const firebaseApp = firebase.initializeApp(firebaseConfig);\n  export const database = firebaseApp.firestore();","import React, {useEffect, useState} from 'react';\nimport TinderCard from 'react-tinder-card';\nimport {database} from '../../firebase'\nimport './TinderCard.css'\nconst TinderCards = () => {\n    const [people, setPeople] = useState([]);\n\n    useEffect( () => {\n        const unsubscribe = database\n        .collection('people')\n        .onSnapshot(snapshot => (\n           setPeople(snapshot.docs.map(doc => doc.data()))\n        ));\n        return () => {\n            unsubscribe();\n        }\n    }, [])\n\n    return (\n        <div>\n            <div className=\"tinderCards_cardsContainer\">\n            {people.map(person => (\n                <TinderCard\n                className=\"swipe\"\n                key={person.name}\n                preventSwipe={[\"up\", \"down\"]}>\n                    <div\n                    style={{backgroundImage: `url(${person.url})`}}\n                    className=\"card\">\n                        <h3>{person.name}</h3>\n                        <span>{person.size}</span>\n                    </div>\n                </TinderCard>\n            ))}\n            </div>\n        </div>\n    )\n}\n\nexport default TinderCards","import React from \"react\";\nimport \"./SwipeButtons.css\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst SwipeButtons = () => {\n  return (\n    <div className=\"swipeButtons\">\n      <IconButton>\n        <ReplayIcon fontSize=\"medium\" className=\"swipeButtons_repeat\"/>\n      </IconButton>\n\n      <IconButton>\n        <CloseIcon fontSize=\"medium\" className=\"swipeButtons_close\"/>\n      </IconButton>\n\n      <IconButton>\n        <StarRateIcon fontSize=\"medium\" className=\"swipeButtons_star\"/>\n      </IconButton>\n\n      <IconButton>\n        <FavoriteIcon fontSize=\"medium\" className=\"swipeButtons_favorite\" />\n      </IconButton>\n\n      <IconButton>\n        <FlashOnIcon fontSize=\"medium\" className=\"swipeButtons_lightning\"/>\n      </IconButton>\n\n    </div>\n  );\n};\n\nexport default SwipeButtons;\n","import React from \"react\";\n\nconst Login = (props) => {\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    handleLogin,\n    handleSignup,\n    hasAccount,\n    setHasAccount,\n    emailError,\n    passwordError,\n  } = props;\n  return (\n    <section className=\"login\">\n      <div className=\"loginContainer\">\n        <label>Email</label>\n        <input\n          type=\"text\"\n          autoFocus\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <p className=\"errorMsg\">{emailError}</p>\n        <label>Senha</label>\n        <input\n          type=\"password\"\n          required\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <p className=\"errorMsg\">{passwordError}</p>\n\n        <div className=\"btnContainer\">\n          {hasAccount ? (\n            <>\n              <button onClick={handleLogin}>Entrar</button>\n              <p>\n                Não tem uma conta?{\" \"}\n                <span onClick={() => setHasAccount(!hasAccount)}>\n                  Cadastrar\n                </span>\n              </p>\n            </>\n          ) : (\n            <>\n              <button onClick={handleSignup}>Cadastrar</button>\n              <p>\n                Ja tem uma conta?{\" \"}\n                <span onClick={() => setHasAccount(!hasAccount)}>Entrar</span>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;","\nimport React from 'react';\n\nconst Hero = ({handleLogout}) => {\n    return (\n        <section className=\"hero\">\n            <nav>\n                <h2>Bem vindo</h2>\n                <button onClick={handleLogout}>Sair</button>\n            </nav>\n        </section>\n    )\n}\n\nexport default Hero","import React, { useState, useEffect } from \"react\";\nimport {firebaseApp} from \"../../firebase\";\nimport Login from \"./Login\"\nimport Hero from \"../Hero/Hero\"\n\nconst LoginApp = () => {\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n    const clearInputs = () => {\n        setEmail('');\n        setPassword('');\n    }\n\n    const clearErrors = () => {\n        setEmailError()\n        setPasswordError()\n    }\n\n  const handleLogin = () => {\n      clearErrors()\n    firebaseApp\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPassword(err.message);\n            break;\n          default: \n            console.log(err.code)\n        }\n      });\n  };\n\n  const handleSignup = () => {\n      clearErrors();\n    firebaseApp\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPassword(err.message);\n            break;\n          default:\n            console.log(err.code)\n        }\n      });\n  };\n  \n  const handleLogout = () => {\n      firebaseApp.auth().signOut();\n  }\n\n  const authListener = () => {\n      firebaseApp.auth().onAuthStateChanged(user => {\n          if(user){\n                clearInputs()\n              setUser(user)\n          }else {\n              setUser(\"\")\n          }\n      })\n  }\n\n  useEffect(() => {\n    authListener();\n  }, [])\n\n  return (\n      <div className=\"app_login\">\n          {user ? (\n            <Hero handleLogout={handleLogout} />\n          ) : (\n            <Login \n            email={email} \n            setEmail={setEmail} \n            password={password} \n            setPassword={setPassword} \n            handleLogin={handleLogin} \n            handleSignup={handleSignup}\n            hasAccount={hasAccount}\n            setHasAccount={setHasAccount}\n            emailError={emailError}\n            passwordError={passwordError}\n            />\n          )}\n          \n            \n      </div>\n  )\n};\n\nexport default LoginApp","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport Chats from '../Chats/Chats'\nimport TinderCards from '../TinderCard/TinderCards'\nimport SwipeButtons from '../SwipeButtons/SwipeButtons'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport LoginApp from '../Login/LoginApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n\n          <Route path=\"/chat\">\n            <Header backButton=\"/\"/>\n            <Chats />\n          </Route>\n\n          <Route path=\"/login\">\n            <Header backButton=\"/\"/>\n            <LoginApp />\n          </Route>\n\n          <Route path=\"/\">\n            <Header />\n            <TinderCards />\n            <SwipeButtons />\n          </Route>\n\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}